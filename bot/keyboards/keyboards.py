"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –° –§–£–ù–ö–¶–ò–ï–ô –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
"""
from typing import List
from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardRemove
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def get_language_keyboard() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üá¶üáø Az…ôrbaycanca", callback_data="lang_az")
    builder.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
    builder.adjust(1)
    return builder.as_markup()


def get_work_time_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò"""
    texts = {
        "ru": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è Geri"}
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["morning"], callback_data="work_time_9-18")
    builder.button(text=texts[language]["afternoon"], callback_data="work_time_10-19")
    builder.button(text=texts[language]["back"], callback_data="back_to_last_name")
    builder.adjust(1)
    return builder.as_markup()


def get_work_time_keyboard_for_profile(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –î–õ–Ø –ü–†–û–§–ò–õ–Ø"""
    texts = {
        "ru": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è Geri"}
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["morning"], callback_data="work_time_9-18")
    builder.button(text=texts[language]["afternoon"], callback_data="work_time_10-19")
    builder.button(text=texts[language]["back"], callback_data="back_to_profile")
    builder.adjust(1)
    return builder.as_markup()


def get_confirmation_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    texts = {
        "ru": {"confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "edit": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å"},
        "az": {"confirm": "‚úÖ T…ôsdiq et", "edit": "‚úèÔ∏è D…ôyi≈üdir"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["confirm"], callback_data="confirm_yes")
    builder.button(text=texts[language]["edit"], callback_data="confirm_edit")
    builder.adjust(1)
    return builder.as_markup()


def get_report_type_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞"""
    texts = {
        "ru": {"has_tasks": "üìù –ï—Å—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞", "no_tasks": "üö´ –ó–∞–¥–∞—á –Ω–µ –±—ã–ª–æ"},
        "az": {"has_tasks": "üìù Hesabat √º√ß√ºn tap≈üƒ±rƒ±qlar var", "no_tasks": "üö´ Tap≈üƒ±rƒ±q olmayƒ±b"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["has_tasks"], callback_data="report_has_tasks")
    builder.button(text=texts[language]["no_tasks"], callback_data="report_no_tasks")
    builder.adjust(1)
    return builder.as_markup()


def get_cancel_and_examples_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞"""
    texts = {
        "ru": {"cancel": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "examples": "üìù –ü—Ä–∏–º–µ—Ä—ã"},
        "az": {"cancel": "‚ùå L…ôƒüv et", "examples": "üìù N√ºmun…ôl…ôr"}
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["examples"], callback_data="show_examples")
    builder.button(text=texts[language]["cancel"], callback_data="cancel_report")
    builder.adjust(2)
    return builder.as_markup()


def get_examples_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π"""
    texts = {
        "ru": {
            "uiux": "üé® UI/UX –î–∏–∑–∞–π–Ω–µ—Ä",
            "graphic": "üñº –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä",
            "backend": "‚öôÔ∏è PHP Backend",
            "flutter": "üì± Flutter Dev",
            "seo": "üîç SEO",
            "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"
        },
        "az": {
            "uiux": "üé® UI/UX Dizayner",
            "graphic": "üñº Qrafik dizayner",
            "backend": "‚öôÔ∏è PHP Backend",
            "flutter": "üì± Flutter Dev",
            "seo": "üîç SEO",
            "back": "‚óÄÔ∏è Geri"
        }
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["uiux"], callback_data="example_uiux")
    builder.button(text=texts[language]["graphic"], callback_data="example_graphic")
    builder.button(text=texts[language]["backend"], callback_data="example_backend")
    builder.button(text=texts[language]["flutter"], callback_data="example_flutter")
    builder.button(text=texts[language]["seo"], callback_data="example_seo")
    builder.button(text=texts[language]["back"], callback_data="back_to_report")
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()


def get_main_menu_keyboard(language: str = "ru", is_admin: bool = False):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not is_admin:
        return ReplyKeyboardRemove()
    
    texts = {
        "ru": {"admin": "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"},
        "az": {"admin": "‚öôÔ∏è Admin panel"},
    }
    builder = ReplyKeyboardBuilder()
    builder.button(text=texts[language]["admin"])
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_edit_profile_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
    texts = {
        "ru": {"first_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "last_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é",
               "work_time": "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "language": "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
               "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"first_name": "‚úèÔ∏è Adƒ± d…ôyi≈üdir", "last_name": "‚úèÔ∏è Soyadƒ± d…ôyi≈üdir",
               "work_time": "‚è∞ ƒ∞≈ü vaxtƒ±nƒ± d…ôyi≈üdir", "language": "üåê Dili d…ôyi≈üdir",
               "back": "‚óÄÔ∏è Geri"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["first_name"], callback_data="edit_first_name")
    builder.button(text=texts[language]["last_name"], callback_data="edit_last_name")
    builder.button(text=texts[language]["work_time"], callback_data="edit_work_time")
    builder.button(text=texts[language]["language"], callback_data="edit_language")
    builder.button(text=texts[language]["back"], callback_data="back_to_menu")
    builder.adjust(1)
    return builder.as_markup()


def get_admin_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    texts = {
        "ru": {"stats": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "users": "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
               "reports": "üìã –û—Ç—á–µ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è", "weekly": "üìÖ –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"},
        "az": {"stats": "üìä Statistika", "users": "üë• ƒ∞stifad…ô√ßil…ôr",
               "reports": "üìã Bug√ºnk√º hesabatlar", "weekly": "üìÖ H…ôft…ôlik hesabat"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["stats"], callback_data="admin_stats")
    builder.button(text=texts[language]["users"], callback_data="admin_users")
    builder.button(text=texts[language]["reports"], callback_data="admin_daily_reports")
    builder.button(text=texts[language]["weekly"], callback_data="admin_weekly_report")
    builder.adjust(2)
    return builder.as_markup()


def get_user_list_keyboard(users: List, language: str, current_admin_id: int) -> InlineKeyboardMarkup:
    """
    ‚úÖ –ù–û–í–û–ï: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è
    """
    texts = {
        "ru": {"back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"back": "‚óÄÔ∏è Geri"}
    }
    
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for user in users:
        # –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–æ–≤
        if user.telegram_id == current_admin_id or user.is_admin:
            continue
            
        button_text = f"üóë {user.first_name} {user.last_name}"
        builder.button(text=button_text, callback_data=f"delete_user_{user.telegram_id}")
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    builder.button(text=texts[language]["back"], callback_data="admin_panel_back")
    
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –ø–æ 1 –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    builder.adjust(1)
    
    return builder.as_markup()


def get_delete_confirmation_keyboard(telegram_id: int, language: str) -> InlineKeyboardMarkup:
    """
    ‚úÖ –ù–û–í–û–ï: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    texts = {
        "ru": {"confirm": "‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", "cancel": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"},
        "az": {"confirm": "‚úÖ B…ôli, sil", "cancel": "‚ùå L…ôƒüv et"}
    }
    
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["confirm"], callback_data=f"confirm_delete_{telegram_id}")
    builder.button(text=texts[language]["cancel"], callback_data=f"cancel_delete_{telegram_id}")
    builder.adjust(1)
    
    return builder.as_markup()