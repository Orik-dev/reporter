# """
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
# """
# from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup
# from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


# def get_language_keyboard() -> InlineKeyboardMarkup:
#     """–í—ã–±–æ—Ä —è–∑—ã–∫–∞"""
#     builder = InlineKeyboardBuilder()
#     builder.button(text="üá¶üáø Az…ôrbaycanca", callback_data="lang_az")
#     builder.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
#     builder.adjust(1)
#     return builder.as_markup()


# def get_work_time_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
#     """–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ + –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥"""
#     texts = {
#         "ru": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
#         "az": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è Geri"}
#     }
#     builder = InlineKeyboardBuilder()
#     builder.button(text=texts[language]["morning"], callback_data="work_time_9-18")
#     builder.button(text=texts[language]["afternoon"], callback_data="work_time_10-19")
#     # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∫ —Ñ–∞–º–∏–ª–∏–∏
#     builder.button(text=texts[language]["back"], callback_data="back_to_last_name")
#     builder.adjust(1)
#     return builder.as_markup()


# def get_confirmation_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
#     """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ –û—Ç–º–µ–Ω–∏—Ç—å)"""
#     texts = {
#         "ru": {"confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "edit": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å"},
#         "az": {"confirm": "‚úÖ T…ôsdiq et", "edit": "‚úèÔ∏è D…ôyi≈üdir"},
#     }
#     builder = InlineKeyboardBuilder()
#     builder.button(text=texts[language]["confirm"], callback_data="confirm_yes")
#     builder.button(text=texts[language]["edit"], callback_data="confirm_edit")
#     builder.adjust(1)
#     return builder.as_markup()


# def get_report_type_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
#     """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞"""
#     texts = {
#         "ru": {"has_tasks": "üìù –ï—Å—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞", "no_tasks": "üö´ –ó–∞–¥–∞—á –Ω–µ –±—ã–ª–æ"},
#         "az": {"has_tasks": "üìù Hesabat √º√ß√ºn tap≈üƒ±rƒ±qlar var", "no_tasks": "üö´ Tap≈üƒ±rƒ±q olmayƒ±b"},
#     }
#     builder = InlineKeyboardBuilder()
#     builder.button(text=texts[language]["has_tasks"], callback_data="report_has_tasks")
#     builder.button(text=texts[language]["no_tasks"], callback_data="report_no_tasks")
#     builder.adjust(1)
#     return builder.as_markup()


# def get_main_menu_keyboard(language: str = "ru", is_admin: bool = False) -> ReplyKeyboardMarkup:
#     """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
#     texts = {
#         "ru": {"profile": "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "report": "üìä –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", 
#                "help": "‚ùì –ü–æ–º–æ—â—å", "admin": "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"},
#         "az": {"profile": "üë§ M…ônim profilim", "report": "üìä Hesabat g√∂nd…ôr", 
#                "help": "‚ùì K√∂m…ôk", "admin": "‚öôÔ∏è Admin panel"},
#     }
#     builder = ReplyKeyboardBuilder()
#     builder.button(text=texts[language]["profile"])
#     builder.button(text=texts[language]["report"])
#     builder.button(text=texts[language]["help"])
#     if is_admin:
#         builder.button(text=texts[language]["admin"])
#     builder.adjust(2)
#     return builder.as_markup(resize_keyboard=True)


# def get_edit_profile_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
#     """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
#     texts = {
#         "ru": {"first_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "last_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é",
#                "work_time": "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "language": "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
#                "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
#         "az": {"first_name": "‚úèÔ∏è Adƒ± d…ôyi≈üdir", "last_name": "‚úèÔ∏è Soyadƒ± d…ôyi≈üdir",
#                "work_time": "‚è∞ ƒ∞≈ü vaxtƒ±nƒ± d…ôyi≈üdir", "language": "üåê Dili d…ôyi≈üdir",
#                "back": "‚óÄÔ∏è Geri"},
#     }
#     builder = InlineKeyboardBuilder()
#     builder.button(text=texts[language]["first_name"], callback_data="edit_first_name")
#     builder.button(text=texts[language]["last_name"], callback_data="edit_last_name")
#     builder.button(text=texts[language]["work_time"], callback_data="edit_work_time")
#     builder.button(text=texts[language]["language"], callback_data="edit_language")
#     builder.button(text=texts[language]["back"], callback_data="back_to_menu")
#     builder.adjust(1)
#     return builder.as_markup()


# def get_admin_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
#     """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
#     texts = {
#         "ru": {"stats": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "users": "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
#                "reports": "üìã –û—Ç—á–µ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è", "weekly": "üìÖ –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"},
#         "az": {"stats": "üìä Statistika", "users": "üë• ƒ∞stifad…ô√ßil…ôr",
#                "reports": "üìã Bug√ºnk√º hesabatlar", "weekly": "üìÖ H…ôft…ôlik hesabat"},
#     }
#     builder = InlineKeyboardBuilder()
#     builder.button(text=texts[language]["stats"], callback_data="admin_stats")
#     builder.button(text=texts[language]["users"], callback_data="admin_users")
#     builder.button(text=texts[language]["reports"], callback_data="admin_daily_reports")
#     builder.button(text=texts[language]["weekly"], callback_data="admin_weekly_report")
#     builder.adjust(2)
#     return builder.as_markup()


"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""
from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def get_language_keyboard() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üá¶üáø Az…ôrbaycanca", callback_data="lang_az")
    builder.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
    builder.adjust(1)
    return builder.as_markup()


def get_work_time_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò"""
    texts = {
        "ru": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è Geri"}
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["morning"], callback_data="work_time_9-18")
    builder.button(text=texts[language]["afternoon"], callback_data="work_time_10-19")
    builder.button(text=texts[language]["back"], callback_data="back_to_last_name")
    builder.adjust(1)
    return builder.as_markup()


def get_work_time_keyboard_for_profile(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –î–õ–Ø –ü–†–û–§–ò–õ–Ø"""
    texts = {
        "ru": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"morning": "üåÖ 9:00 - 18:00", "afternoon": "üåÜ 10:00 - 19:00", "back": "‚óÄÔ∏è Geri"}
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["morning"], callback_data="work_time_9-18")
    builder.button(text=texts[language]["afternoon"], callback_data="work_time_10-19")
    builder.button(text=texts[language]["back"], callback_data="back_to_profile")
    builder.adjust(1)
    return builder.as_markup()


def get_confirmation_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    texts = {
        "ru": {"confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "edit": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å"},
        "az": {"confirm": "‚úÖ T…ôsdiq et", "edit": "‚úèÔ∏è D…ôyi≈üdir"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["confirm"], callback_data="confirm_yes")
    builder.button(text=texts[language]["edit"], callback_data="confirm_edit")
    builder.adjust(1)
    return builder.as_markup()


def get_report_type_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞"""
    texts = {
        "ru": {"has_tasks": "üìù –ï—Å—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞", "no_tasks": "üö´ –ó–∞–¥–∞—á –Ω–µ –±—ã–ª–æ"},
        "az": {"has_tasks": "üìù Hesabat √º√ß√ºn tap≈üƒ±rƒ±qlar var", "no_tasks": "üö´ Tap≈üƒ±rƒ±q olmayƒ±b"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["has_tasks"], callback_data="report_has_tasks")
    builder.button(text=texts[language]["no_tasks"], callback_data="report_no_tasks")
    builder.adjust(1)
    return builder.as_markup()


def get_cancel_report_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –æ—Ç—á–µ—Ç–∞"""
    texts = {
        "ru": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
        "az": "‚ùå L…ôƒüv et"
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language], callback_data="cancel_report")
    return builder.as_markup()


def get_main_menu_keyboard(language: str = "ru", is_admin: bool = False):
    """
    ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    - –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ReplyKeyboardRemove (—É–±–∏—Ä–∞–µ—Ç –∫–Ω–æ–ø–∫–∏)
    - –î–ª—è –∞–¥–º–∏–Ω–æ–≤: —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    """
    if not is_admin:
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º ReplyKeyboardRemove –≤–º–µ—Å—Ç–æ None
        return ReplyKeyboardRemove()
    
    # –î–ª—è –∞–¥–º–∏–Ω–æ–≤ - —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    texts = {
        "ru": {"admin": "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"},
        "az": {"admin": "‚öôÔ∏è Admin panel"},
    }
    builder = ReplyKeyboardBuilder()
    builder.button(text=texts[language]["admin"])
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def get_edit_profile_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
    texts = {
        "ru": {"first_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "last_name": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é",
               "work_time": "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "language": "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
               "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥"},
        "az": {"first_name": "‚úèÔ∏è Adƒ± d…ôyi≈üdir", "last_name": "‚úèÔ∏è Soyadƒ± d…ôyi≈üdir",
               "work_time": "‚è∞ ƒ∞≈ü vaxtƒ±nƒ± d…ôyi≈üdir", "language": "üåê Dili d…ôyi≈üdir",
               "back": "‚óÄÔ∏è Geri"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["first_name"], callback_data="edit_first_name")
    builder.button(text=texts[language]["last_name"], callback_data="edit_last_name")
    builder.button(text=texts[language]["work_time"], callback_data="edit_work_time")
    builder.button(text=texts[language]["language"], callback_data="edit_language")
    builder.button(text=texts[language]["back"], callback_data="back_to_menu")
    builder.adjust(1)
    return builder.as_markup()


def get_admin_keyboard(language: str = "ru") -> InlineKeyboardMarkup:
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    texts = {
        "ru": {"stats": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "users": "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
               "reports": "üìã –û—Ç—á–µ—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è", "weekly": "üìÖ –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"},
        "az": {"stats": "üìä Statistika", "users": "üë• ƒ∞stifad…ô√ßil…ôr",
               "reports": "üìã Bug√ºnk√º hesabatlar", "weekly": "üìÖ H…ôft…ôlik hesabat"},
    }
    builder = InlineKeyboardBuilder()
    builder.button(text=texts[language]["stats"], callback_data="admin_stats")
    builder.button(text=texts[language]["users"], callback_data="admin_users")
    builder.button(text=texts[language]["reports"], callback_data="admin_daily_reports")
    builder.button(text=texts[language]["weekly"], callback_data="admin_weekly_report")
    builder.adjust(2)
    return builder.as_markup()